#@ load("@ytt:ip", "ip")

ipv4:
  ip: #@ ip.parse_addr("192.0.2.1")
  is_ipv4: #@ ip.parse_addr("192.0.2.1").is_ipv4()
  is_ipv6: #@ ip.parse_addr("192.0.2.1").is_ipv6()
ipv6:
  ip: #@ ip.parse_addr("2001:db8::1")
  is_ipv4: #@ ip.parse_addr("2001:db8::1").is_ipv4()
  is_ipv6: #@ ip.parse_addr("2001:db8::1").is_ipv6()

#@ def get_parse_err(addr):
#@   _, err = ip.parse_addr(addr, return_error=True)
#@   return err
#@ end

#@ def get_parse_success(addr):
#@   addr, _ = ip.parse_addr(addr, return_error=True)
#@   return addr
#@ end

return-error:
  error-case:
    invalid: #@ get_parse_err("not-a-valid-ip")
    not_a_string: #@ get_parse_err(["not-a-string"])
  success-case:
    success: #@ get_parse_success("192.0.2.1")
    success_is_ipv4: #@ get_parse_success("192.0.2.1").is_ipv4()
    success_is_ipv6: #@ get_parse_success("192.0.2.1").is_ipv6()
    return_error_false: #@ ip.parse_addr("192.0.2.1", return_error=False)

+++

ipv4:
  ip: 192.0.2.1
  is_ipv4: true
  is_ipv6: false
ipv6:
  ip: 2001:db8::1
  is_ipv4: false
  is_ipv6: true
return-error:
  error-case:
    invalid: 'invalid IP address: not-a-valid-ip'
    not_a_string: expected a string, but was list
  success-case:
    success: 192.0.2.1
    success_is_ipv4: true
    success_is_ipv6: false
    return_error_false: 192.0.2.1
